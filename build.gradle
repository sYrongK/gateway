plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

ext {//gradle의 확장 속성(메타 데이터, 전역 변수) 정의. 전체 프로젝트에서 사용할 수 있다. def는 Groovy의 단순한 변수 선언 키워드로 선언해 둔 빌드 스크립트 내에서만 사용 가능하다.
    set('springCloudVersion', "2023.0.2")
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-undertow') {
        exclude group: "io.undertow", module: "undertow-websockets-jsr"
    }
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
}

dependencyManagement {//종속성 버전 관리를 중앙에서 하고 싶을 때 사용. 특정 라이브러리의 버전을 일관되게 관리 가능. 'io.spring.dependency-management' 플러그인을 임포트 후 사용할 수 있다.
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        //BOM(Bill of Materials) 파일: 특정 라이브러와 그 하위 모듈에 대한 버전을 정의한 것. 다양한 모듈의 버전을 일관되게 관리해서 호환성을 보장한다.
    }
}

test {
    useJUnitPlatform()
}
